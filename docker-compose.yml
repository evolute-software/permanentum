---
version: '3.8'

x-base-logging: &base-logging
  logging:
    driver: "json-file"
    options:
      max-size: "20m"
      max-file: "10"


services:

  lotus:
    <<: *base-logging
    image: docker.services.kindstudios.gr/permanentum-lotus:${LOTUS_VERSION}
    build:
      context: ./lotus
      args:
        VERSION: "${LOTUS_VERSION?}"
        NET: $FILECOIN_NETWORK
    volumes:
    - type: bind
      source: $LOTUS_STORAGE
      target: /lotus
    - type: bind
      source: $LOTUS_KEYSTORE
      target: /lotus/keystore
    environment:
      LOTUS_PATH: /lotus
      BOOTSTRAP: "${LOTUS_BOOTSTRAP?}"
      LOTUS_API_LISTENADDRESS: "/ip4/0.0.0.0/tcp/1234/http"
      LOTUS_API_REMOTELISTENADDRESS: "${PORT_LOTUS?}"
      LOTUS_CLIENT_USEIPFS: "true"
      LOTUS_CLIENT_IPFSMADDR: "${IPFS_NODE?}"
      LOTUS_CLIENT_IPFSUSEFORRETRIEVAL: "true"
    #restart: on-failure
    ports:
    - "127.0.0.1:${PORT_LOTUS}:1234"
    profiles: [ "filecoin" ]

  ipfs:
    <<: *base-logging
    restart: on-failure
    build:
      context: ./ipfs
      args:
        PORT_IPFS_GW:
        PORT_IPFS_WS:
        PORT_IPFS_API:
        PORT_IPFS_GOSSIP:
    profiles: [ "ipfs" ]
    environment:
      IPFS_PROFILE: server
      IPFS_PATH: /ipfsdata
      WEB_UI_IP: ${TUN0?}
      IPFS_LOGGING: info
      PORT_IPFS_GW:
      PORT_IPFS_WS:
      PORT_IPFS_API:
      PORT_IPFS_GOSSIP:
    volumes:
      - ${IPFS_STORAGE}:/ipfsdata
    ports:
      - "${PORT_IPFS_GOSSIP?}:${PORT_IPFS_GOSSIP}/tcp"         # ipfs gossip
      - "${PORT_IPFS_GOSSIP?}:${PORT_IPFS_GOSSIP}/udp"         # ipfs gossip
      - "127.0.0.1:${PORT_IPFS_GW?}:${PORT_IPFS_GW}" # gateway local access (nginx)
      - "${TUN0}:${PORT_IPFS_GW?}:${PORT_IPFS_GW}"   # gateway vpn access (dev)
      - "${TUN0}:${PORT_IPFS_WS?}:${PORT_IPFS_WS}" # websocket-listener
      - "${TUN0}:${PORT_IPFS_API?}:${PORT_IPFS_API}" # api server (don't expose externally)

  fil-miners:
    build: fil-miners
    environment:
        NET: $FILECOIN_NETWORK
    secrets:
      - fil-sp-db

  fil-sp-db: &db
    image: postgres:14-alpine
    restart: always
    ports:
      - "${PORT_FIL_SP_DB?}:5432"
    environment:
      POSTGRES_USER: fil-sp-db
      POSTGRES_DB: fil-sp-db
      POSTGRES_PASSWORD_FILE: /run/secrets/fil-sp-db
    volumes:
      - fil-sp-db:/var/lib/postgresql/data
    secrets:
      - fil-sp-db
    profiles: [ "filecoin", "backend"]

  indexer:
    build: indexer
    # TODO: clean this up
    command: daemon --config /etc/oura/daemon.toml
    environment:
      NODE_HOST: cntr-1.devices.kindstudios.gr
      NODE_PORT: 25437
      CARDANO_NETWORK:
      SC_ADDRESS:
      TUN0:
      PORT_INDEXER_METRICS:
    ports:
      - "${TUN0}:${PORT_INDEXER_METRICS}:9186"
    volumes:
      - indexer-cursor:/run/oura/cursor

volumes:
  nix-storage:
  cardano-socket:
  fil-sp-db:
  indexer-cursor:

secrets:
  fil-sp-db:
     file: ops/secrets/fil-sp-db
